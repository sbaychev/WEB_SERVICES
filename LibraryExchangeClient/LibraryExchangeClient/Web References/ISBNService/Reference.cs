//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace LibraryExchangeClient.ISBNService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ISBNServiceSoapBinding", Namespace="http://webservices.daehosting.com/ISBN")]
    public partial class ISBNService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsValidISBN13OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidISBN10OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ISBNService() {
            this.Url = global::LibraryExchangeClient.Properties.Settings.Default.LibraryExchangeClient_ISBNService_ISBNService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsValidISBN13CompletedEventHandler IsValidISBN13Completed;
        
        /// <remarks/>
        public event IsValidISBN10CompletedEventHandler IsValidISBN10Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/ISBN", ResponseNamespace="http://webservices.daehosting.com/ISBN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidISBN13(string sISBN) {
            object[] results = this.Invoke("IsValidISBN13", new object[] {
                        sISBN});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidISBN13Async(string sISBN) {
            this.IsValidISBN13Async(sISBN, null);
        }
        
        /// <remarks/>
        public void IsValidISBN13Async(string sISBN, object userState) {
            if ((this.IsValidISBN13OperationCompleted == null)) {
                this.IsValidISBN13OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidISBN13OperationCompleted);
            }
            this.InvokeAsync("IsValidISBN13", new object[] {
                        sISBN}, this.IsValidISBN13OperationCompleted, userState);
        }
        
        private void OnIsValidISBN13OperationCompleted(object arg) {
            if ((this.IsValidISBN13Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidISBN13Completed(this, new IsValidISBN13CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservices.daehosting.com/ISBN", ResponseNamespace="http://webservices.daehosting.com/ISBN", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidISBN10(string sISBN) {
            object[] results = this.Invoke("IsValidISBN10", new object[] {
                        sISBN});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidISBN10Async(string sISBN) {
            this.IsValidISBN10Async(sISBN, null);
        }
        
        /// <remarks/>
        public void IsValidISBN10Async(string sISBN, object userState) {
            if ((this.IsValidISBN10OperationCompleted == null)) {
                this.IsValidISBN10OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidISBN10OperationCompleted);
            }
            this.InvokeAsync("IsValidISBN10", new object[] {
                        sISBN}, this.IsValidISBN10OperationCompleted, userState);
        }
        
        private void OnIsValidISBN10OperationCompleted(object arg) {
            if ((this.IsValidISBN10Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidISBN10Completed(this, new IsValidISBN10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsValidISBN13CompletedEventHandler(object sender, IsValidISBN13CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidISBN13CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidISBN13CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsValidISBN10CompletedEventHandler(object sender, IsValidISBN10CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidISBN10CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidISBN10CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591